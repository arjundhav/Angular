 What do you mean by Angular and why it is used?

Angular is a platform and framework for building single-page client applications using HTML and TypeScript.
It implements core and optional functionality as a set of TypeScript libraries that you import into your applications.
  

Angular helps build interactive and dynamic single page applications (SPAs) with its compelling features including templating, 
two-way binding, 
modularization, RESTful API handling, 
dependency injection, and AJAX handling.

What is Typescript?
 “TypeScript is JavaScript for application-scale development.”
TypeScript is just JavaScript. TypeScript starts with JavaScript and ends with JavaScript. 
Typescript adopts the basic building blocks of your program from JavaScript. Hence, you only need to know JavaScript to use 
TypeScript. 
All TypeScript code is converted into its JavaScript equivalent for the purpose of execution.

Angular Version...
All version are same.
Every new versions has some updates.
We will use angular 13 in this version.

Angular Intro..
Developed by google
released in 2016

Angular(Angular 2+")open source web application framework led by the angular team at google.

Angular is total different from AngularJs. AngularJs rewrite of angular. But this led to confusion among developers.

Angular has MVC(model-view-controller) based architecture for application development.
 Model-It is the lowest level of the pattern responsible for maintaining data.
View - It is responsible for displaying or portion of the data to the user.
Controller - It is a software code that controls the interactions between the model and view.


Installation angular 
When we want install installed angular we have two commands one is node and other npm.
npm install -g @angular/cli@13.1.3

Uninstallation of anagular :
npm uninstall -g @angular/cli
npm cache clean --force
npm cache verify


how we check node and npm is installed or not
node -v
It define node is install or not
npm -v
it define npm is install or not.



Install command line for angular
npm install -g @angular/cli (command line interface) =The Angular CLI is used for much more than just creating an Angular project. 
It can be used to create components, services, pipes, directives and more. Also it helps in building, serving, testing etc. 
CLI itself is quite something to learn about, it makes Angular development workflow much easier and faster.


NPM:
NPM is basically a package manager which acts as a dependency provider. 
If there are many small packages, required to build a large one, NPM is the one hotspot which will provide us with the packages. 
Angular-CLI is one of those packages. As far as NG is concerned, it is the core module of Angular.

ng=
ng stands for "Angular;" all of the built-in directives that ship with Angular use that prefix.


g means globally
or
npm install --g @angular/cli

or 
use use ubantu or mac simply write
npm install sudo npm install -g @angular/cli



how to check cli is installed or not simply type:
ng --version //

If we want to update  angular then command is:
npm update -g @angular/cli@



How to create project:
ng new (project name any)
he asks some question say yes
It take some time
next command:
project name ng serve 
It build the node modules.


Angular folder and file structure:
1)What is pacakage.json file.
It will find in root file. It is first created in file when we generate a project.
dev dependancy- if we installed other pacakges from outside it is included in devdepedancy



modules:Module in Angular refers to a place where you can group the components, directives, pipes, and services, 
which are related to the application. In case you are developing a website, the header, footer, left, center 
and the right section become part of a module. To define module, we can use the NgModule.



Installation of Bootstrap:
npm i bootstrap
 import the framework into our style.css file
  @import '`bootstrap/dist/css/bootstrap.min.css';


Folder structure and boot process:
1.e2e -> end to end test scripts will be residing.
        protactor framework is used to run end to end tests.
        app.po.ts-> practor file which will have "po"file.
        app.e2e-spec.ts file
         -e2e-it tells that this script is end to end test script
         -spec ->whenver you spec added-that means it is test script. 

2.node_modules
         -this is the folder where all modules and liabaries reside.
         -add/remove modules/pacakges
         -we will not touch this folder for development purpose.

3.src
    -This is the main workarea/app code resides inside this folder
    - This is the basic structure
    - app folder is the place where you will see components, module,service,directives,pipes etc..
    -app.components.ts[where you see component -it means that file correspondance to a component]
    -app.module.ts[ it means this is module]
   -app.services.ts[it mean these are service files]
    -app.component.spec.ts[it means these are UNIT test scripts]
   -assets
     -styles
     -icons
     -imgs
-env
     -here we will configure variables or pipelines for dev,test,stage and prod
 -polyfills- if the user browser is outdated one-polyfills will add ES6 functionality.
  -backward comaplaibility.

4. Booting process:

   Main.ts - booting the angular application.
      -This is the first file that angular will check to load how to start
       an angular application.
      -we need atleast 1 module to be present in our main.ts
      -by deafault the module that's inside the main.ts is-Appmodule.


      -bootstrapModule is the one which loads and starts the application.
      -THIS IS NOT RELATED TO BOOTSTRAP FRAMEWORK AT all.


      -Yes-we can change the deafault AppModule with something else
         -We can write custom module and then load into bootstrapModule 
   

test.ts - test script for booting the application.
        - All the code inside main.ts is tested here in this file..

styles.css
    -global stylesheet
    -Dont make it heavy
    -lIMITED typography,fonts.,generic classes

5.angular.json 
    -this is the file for all the configuration of our angular project
   

6.karma.conf.js
  - karma runner for running our unit test scripts.
  - configure our test script

7. tsconfig.json- build and compilation related to our angular application.

8.tslint.json - linting or coding standards.

9. pacakage.json:
 you will have scripts commands - which are very useful in your build pipelines.
 1. to understand any existing angular application -always refer the pacakage.json to see the scripts
 2. It will have dependancies and devdepencies
 4. pacakage.json will resolve all the required sub modules.





Angular CLI:
Command line interface
--------------------------------------
1.ng new <project-name>
2.ng --version <checked the which version you installed>
3.ng generate <we can generate module,component,service, pipe>
4.ng serve
    -used for compiling/transpiling our application
    - by deafault it uses 4200 port
    -production-Ahead of time is by deafault for prod.
5. ng test
    -will run all our unit tests
    -tests are run using karma runner
    -unit tests are written using jasmine framework
    -code coverage
    -we can disabled some tests


6. eg e2e
     -It will run end to end tests
     -.e2e-seec.ts-these are end to end test scripts
     -protractor 

7. ng update
     -if you are running on version than current version.
     -ng update

8. ng build
     -build and generate the output of your application
     -compiled javascript code
     -this is mainly used for promoting to high env

9. ng lint
   - code syntax linting
   -set rules for how code should be written
       -coding standard
    - it is following the coding standard.

-------------------------------------------------------------------
Component:
component is the basic building block of angular,which means that an angular
application is a collection of components, and one component is responsible for 
handling view or part of the view.

A component encapsulates the data, the HTML markup,& the logic for view.
you can create component as required.

"COMPONENT IS NOTHING BUT SIMPLE TYPESCRIPT CLASS WHICH CONTAINS THE FOLLOWING THINGS:
1.Typescript class
2. HTML temaplate/Template URL
@component decorator with metadata.

Every Angular application has at least one component that is used to display the data on the view.

The component conatins metadata like animations effect,style to apply the components,template, input-output,import etc.

These are the main building blocks of an Angular application.

When we create any component,it gets defined in @NgModule=>declarations.

Angular is component-based architecture which allows us to work on smaller and more mainatinable pieces
that can also be used in different places.

**********************************************************************

Angular Modules
 Modules in angular are logical functionality.
For e.g users module
      -register
      -forgot
      -signup
      -services
3.Modules can have components,services,directives,pipes etc
    -all are related to a particular functionality.
4. plug and play features.
5.It allows to be modular,easy to maintain,easy to debug,it reduces the app footprint
  -if you are on a page which does not need a module-simply dont load it.
6. by deafault-every angular app has 1 module atleast
   -Appmodule
7. we need to import required modules from core pacakages
   -broswerModule
    -ngModule
8. every module-needs to be defined by ngModule
9. we can declare components we need it
10. import other modules inside a module
11. which is deafault component to load
12. using ng generate module

--------------------------------------------------------------

 Directives
Directives are elements which change the appearence or behaviour of the DOM element.There are 3 types of the dirctives mainly:
                refer img ;

Component Directives:
component is also a type of directive with template,styles and logic part which is most famous type of directive.

You cannot create an angular application without one. A component directive
requires a view along with its attached behaviour. This type of directives adds DOM elements.

The naming covention for components is :name.component.ts.




Structural Directives:
structural directives are responsible for the HTML layout. They shape or reshape
the HTML view by simply adding or removing the elements in the DOM.

These directives are the way to handle how the component or the element
renders in a template.

There are basically 3 structural directives avilable in Angular
NgIf(*ngIf)
NgFor(*ngFor)
NgSwitch(*ngSwitch)


Attribute Directives:
Attribute directive is a way to modify the apperance of the DOM element or component. There are 2 built-in Attribute
Directives in Angular.

NgStyle: Angular provides a built-in NgStyle attribute to modify the element appearnce and behavior.

ngClass:This attribute is used to change the class attribute of the element in DOM or the component to which is has been attached.


NgStyle:
for dynamic classs we want to use ngStyle
app.component.ts
constructor(){}
people:any[]=[
{
"name":"xyz",
"country":"India"
},
{
"name":"abc",
"country":"UK"
},
{
"name":"Pqr",
"country":"India"
},
{
"name":"wer",
"country":"USA"
},
{
"name":"SDF",
"country":"UK"
},
];
getcolor(country){
switch(Country){
case 'India':
return 'green';
case 'UK':
return 'red';
}
}
APP.component.html
<h2>ngStyle Example</h2>
<ul *ngFor="let person of people">
<li [ngStyle]="{'color':getcolor(person.Country)}">
{{person.name}} -({{person.Country}})
</li>


# - variabale declarations #abc

() -event binding ()

[]- Property Binding

[()] - two -way property binding

{{ }} - string interpolation-

* -structural Directives
*************************************************************************************************************************************
Decorators
 -Typescript feature used for passing meta data
 -Decorators starts with @ symbol following by brackets & arguments,
  since decorators are just functions in typescript.
 -Decorators are functions that will return functions.
 -Decorators are invoked run time
 -Decorators are allows us to execute functions.


Types of Decorators in Angular
 class Decorators -@NgModule() to define modules.
@component() to define component

@Injectable() to define services

 @input @output ...It send & recive data from the DOM.
 it means it is build communication between parent to child .

four types of decorator:
1) Class decorator e.g.@component , @NgModule

property decorators for property inside classes
e.g.@Input & @Output

Method decorators for methods inside classes, e.g @HostListener:It allow us to handle  events host elements in the class directives.

e.g 
@HostListener('click',['$event'])
hostlistener(event:Event)
{
  alert("Hello,How are you?")
}

Paratmeter Decorators for parameters inside class constructors,
e.g.@Inject

*"Each property has a unique role"*



***************************************************************


  Main file we used in angular:
 Pacakage json file:It gives application information
node_modules
src folder
enviroments
assets
index.html
main.js
app
modules
components
 
